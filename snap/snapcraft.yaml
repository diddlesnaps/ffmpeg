name: ffmpeg
version: '4.3'
summary: A complete solution to record, convert and stream audio and video.
description: |
 FFmpeg is the leading multimedia framework, able to decode, encode,
 transcode, mux, demux, stream, filter and play pretty much anything that
 humans and machines have created. It supports the most obscure ancient formats
 up to the cutting edge. No matter if they were designed by some standards
 committee, the community or a corporation.

base: core18
grade: stable
confinement: strict

parts:
  nv-codec-headers:
    plugin: make
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-tag: 'n9.1.23.1'
    make-parameters:
      - PREFIX=/usr
    build-environment:
      - CC: gcc-8
      - CCX: g++-8
    build-packages:
      - gcc-8
      - g++-8
      - pkg-config

  avisynth-plus:
    plugin: cmake
    source: https://github.com/AviSynth/AviSynthPlus.git
    source-tag: 'v3.6.1'
    configflags:
      - -DCMAKE_C_COMPILER=gcc-8
      - -DCMAKE_CXX_COMPILER=g++-8
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
    build-packages:
      - gcc-8
      - g++-8

  ffmpeg:
    after:
      - avisynth-plus
      - nv-codec-headers
    plugin: autotools
    source: https://github.com/FFmpeg/FFmpeg.git
    source-branch: release/4.3
    source-depth: 1
    build-environment:
      - CC: gcc-8
      - CCX: g++-8
    build-packages:
      - flite1-dev
      - gcc-8
      - g++-8
      - libass-dev
      - libbs2b-dev
      - libbluray-dev
      - libbz2-dev
      - libcaca-dev
      - libcdio-paranoia-dev
      - libdrm-dev
      - libgme-dev
      - libgnutls28-dev
      - libgsm1-dev
      - liblzma-dev
      - libmp3lame-dev
      - libomxil-bellagio-dev
      - libopenal-dev
      - libopencore-amrnb-dev
      - libopencore-amrwb-dev
      - libopenjp2-7-dev
      - libopenmpt-dev
      - libopus-dev
      - libpulse-dev
      - librsvg2-dev
      - librubberband-dev
      - libsctp-dev
      - libsdl2-dev
      - libsnappy-dev
      - libsoxr-dev
      - libspeex-dev
      - libtesseract-dev
      - libtheora-dev
      - libtwolame-dev
      - libva-dev
      - libv4l-dev
      - libvdpau-dev
      - libvo-amrwbenc-dev
      - libvorbis-dev
      - libvpx-dev
      - libwavpack-dev
      - libwebp-dev
      - libx264-dev
      - libx265-dev
      - libxcb-shape0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxml2-dev
      - libxv-dev
      - libxvidcore-dev
      - libzvbi-dev
      - ocl-icd-opencl-dev
      - opencl-headers
      - pkg-config
      - yasm
      - on amd64:
        - libcrystalhd-dev
        - nvidia-cuda-dev
        - nvidia-cuda-toolkit
      - on i386:
        - libcrystalhd-dev
    stage-packages:
      - libass9
      - libbluray2
      - libbs2b0
      - libcaca0
      - libcdio-paranoia2
      - libdrm2
      - libflite1
      - libgme0
      - libgnutls30
      - libgsm1
      - libmp3lame0
      - libopenal1
      - libopencore-amrnb0
      - libopencore-amrwb0
      - libopenjp2-7
      - libopenmpt0
      - libopus0
      - libpulse0
      - librsvg2-2
      - librubberband2
      - libsdl2-2.0-0
      - libsnappy1v5
      - libsoxr0
      - libspeex1
      - libtesseract4
      - libtheora0
      - libtwolame0
      - libv4l-0
      - libv4l2rds0
      - libva-drm2
      - libva-glx2
      - libva-wayland2
      - libvdpau-va-gl1
      - libvo-amrwbenc0
      - libvorbis0a
      - libvorbisenc2
      - libvpx5
      - libwavpack1
      - libwebp6
      - libx264-152
      - libx265-146
      - libx11-6
      - libxau6
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxml2
      - libxv1
      - libxvidcore4
      - libzvbi0
      - mesa-va-drivers
      - mesa-vdpau-drivers
      - ocl-icd-libopencl1
      - on amd64:
        - i965-va-driver
        - libcrystalhd3
        - libnppig9.1
        - libnppicc9.1
        - libnppidei9.1
      - on i386:
        - i965-va-driver
        - libcrystalhd3
    override-build: |
      ARCHITECTURE=$(dpkg --print-architecture)
      if [ "${ARCHITECTURE}" = "amd64" ]; then
        EXTRA="--enable-cuda --enable-cuda-sdk --enable-cuvid --enable-libnpp"
      else
        EXTRA=""
      fi
      ./configure \
      --prefix=/usr \
      --disable-debug \
      --disable-doc \
      --disable-libfdk-aac \
      --disable-static \
      --enable-avisynth \
      --enable-ffplay \
      --enable-gnutls \
      --enable-gpl \
      --enable-libass \
      --enable-libbluray \
      --enable-libbs2b \
      --enable-libcaca \
      --enable-libcdio \
      --enable-libdrm \
      --enable-libflite \
      --enable-libfontconfig \
      --enable-libfreetype \
      --enable-libgme \
      --enable-libgsm \
      --enable-libmp3lame \
      --enable-libopencore_amrnb \
      --enable-libopencore_amrwb \
      --enable-libopenjpeg \
      --enable-libopenmpt \
      --enable-libopus \
      --enable-libpulse \
      --enable-librsvg \
      --enable-librubberband \
      --enable-libsnappy \
      --enable-libsoxr \
      --enable-libspeex \
      --enable-libtesseract \
      --enable-libtheora \
      --enable-libtwolame \
      --enable-libv4l2 \
      --enable-libvo_amrwbenc \
      --enable-libvorbis \
      --enable-libvpx \
      --enable-libwavpack \
      --enable-libwebp \
      --enable-libx264 \
      --enable-libx265 \
      --enable-libxcb \
      --enable-libxml2 \
      --enable-libxvid \
      --enable-libzvbi \
      --enable-nonfree \
      --enable-nvenc \
      --enable-omx \
      --enable-openal \
      --enable-opencl \
      --enable-opengl \
      --enable-runtime-cpudetect \
      --enable-sdl2 \
      --enable-shared \
      --enable-vaapi \
      --enable-vdpau \
      --enable-version3 \
      --enable-xlib ${EXTRA}
      make
      make install
    prime:
      - usr/bin
      - usr/lib
      - usr/include
      - -usr/share/doc
      - -usr/share/man

  ffmpeg-wrapper:
    after:
      - ffmpeg
    plugin: dump
    source: files
    organize:
      'ffplay': bin/
      'ffmpeg': bin/
      'ffprobe': bin/
      'wrapper': bin/

  cleanup:
    after:
      - ffmpeg-wrapper
    plugin: nil
    override-prime: |
      set -eux
      for CRUFT in usr/include usr/share/bug usr/share/lintian usr/share/man; do
        rm -rf ${SNAPCRAFT_PRIME}/${CRUFT}
      done
      find ${SNAPCRAFT_PRIME}/usr/share/doc/ -type f -not -name 'copyright' -delete || true
      rm -v ${SNAPCRAFT_PRIME}/usr/share/doc/*/changelog.Debian.gz || true
      find ${SNAPCRAFT_PRIME}/usr/share -type d -empty -delete || true

apps:
  ffmpeg:
    command: bin/ffmpeg
    environment:
      # Tell libGL where to find the drivers
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      LIBVA_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      # Mesa Libs for OpenGL support
      # Workaround in snapd for proprietary nVidia drivers mounts the drivers in
      # /var/lib/snapd/lib/gl that needs to be in LD_LIBRARY_PATH
      # Without that OpenGL using apps do not work with the nVidia drivers.
      # Ref.: https://bugs.launchpad.net/snappy/+bug/1588192
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-egl:$LIBGL_DRIVERS_PATH:/var/lib/snapd/lib/gl
    plugs:
      - audio-playback
      - audio-record
      - alsa
      - camera
      - desktop
      - hardware-observe
      - home
      - network-bind
      - network
      - opengl
      - optical-drive
      - pulseaudio
      - removable-media
      - wayland
      - x11
  ffprobe:
    command: bin/ffprobe
    environment:
      # Tell libGL where to find the drivers
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      LIBVA_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      # Mesa Libs for OpenGL support
      # Workaround in snapd for proprietary nVidia drivers mounts the drivers in
      # /var/lib/snapd/lib/gl that needs to be in LD_LIBRARY_PATH
      # Without that OpenGL using apps do not work with the nVidia drivers.
      # Ref.: https://bugs.launchpad.net/snappy/+bug/1588192
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-egl:$LIBGL_DRIVERS_PATH:/var/lib/snapd/lib/gl
    plugs:
      - audio-playback
      - audio-record
      - alsa
      - camera
      - desktop
      - hardware-observe
      - home
      - network-bind
      - network
      - opengl
      - optical-drive
      - pulseaudio
      - removable-media
      - wayland
      - x11
  ffplay:
    command: bin/ffplay
    environment:
      # Tell libGL where to find the drivers
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      LIBVA_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      # Mesa Libs for OpenGL support
      # Workaround in snapd for proprietary nVidia drivers mounts the drivers in
      # /var/lib/snapd/lib/gl that needs to be in LD_LIBRARY_PATH
      # Without that OpenGL using apps do not work with the nVidia drivers.
      # Ref.: https://bugs.launchpad.net/snappy/+bug/1588192
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-egl:$LIBGL_DRIVERS_PATH:/var/lib/snapd/lib/gl
    plugs:
      - audio-playback
      - audio-record
      - alsa
      - camera
      - desktop
      - hardware-observe
      - home
      - network-bind
      - network
      - opengl
      - optical-drive
      - pulseaudio
      - removable-media
      - wayland
      - x11
